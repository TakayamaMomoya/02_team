//=========================================================
//
// ゲームオーバー処理 [gameover.cpp]
// Author = 阿部翔大郎
//
//=========================================================

//===============================================
// インクルード
//===============================================
#include "gameover.h"
#include "enemyManager.h"

//===============================================
// マクロ定義
//===============================================

//===============================================
// 静的メンバ変数
//===============================================

//===============================================
// コンストラクタ
//===============================================
CGameover::CGameover()
{
	
}

//===============================================
// デストラクタ
//===============================================
CGameover::~CGameover()
{
	
}

//===============================================
// 生成処理
//===============================================
CGameover *CGameover::Create(int nPriority)
{
	CGameover *pGameover;

	// ゲームオーバーの生成
	pGameover = new CGameover;

	return pGameover;
}

//===============================================
// 初期化処理
//===============================================
HRESULT CGameover::Init(D3DXVECTOR3 pos)
{
	// 敵マネージャーのインスタンスの取得
	CEnemyManager* pEnemyManager = CEnemyManager::GetInstance();

	if (pEnemyManager != nullptr)
	{
		// 先頭オブジェクトを代入
		CEnemy* pEnemy = pEnemyManager->GetHead();

		while (pEnemy != nullptr)
		{
			// 次のアドレスを保存
			CEnemy* pEnemyNext = pEnemy->GetNext();

			// 終了処理
			pEnemy->Uninit();

			// 次のアドレスを代入
			pEnemy = pEnemyNext;
		}
	}

	return 0;
}

//===============================================
// 終了処理
//===============================================
void CGameover::Uninit(void)
{
	
}

//===============================================
// 更新処理
//===============================================
void CGameover::Update(void)
{
	
}

//===============================================
// 描画処理
//===============================================
void CGameover::Draw(void)
{
	
}

//===============================================
// 設定処理
//===============================================
void CGameover::Set(const D3DXVECTOR3 pos, const bool bMove)
{
	
}